resources:
- name: opsman-product
  type: s3
  source:
    regexp: ops-manager-vsphere-(.*).ova
    endpoint: ((s3.address))
    access_key_id: ((s3.access_key))
    secret_access_key: ((s3.secret_key))
    skip_ssl_verification: true
    bucket: ((s3.bucket_name))

- name: pas-product
  type: s3
  source:
    regexp: srt-(.*).pivotal
    endpoint: ((s3.address))
    access_key_id: ((s3.access_key))
    secret_access_key: ((s3.secret_key))
    skip_ssl_verification: true
    bucket: ((s3.bucket_name))

- name: pas-stemcell
  type: s3
  source:
    regexp: pas-stemcell/bosh-stemcell-(.*)-vsphere.*\.tgz
    endpoint: ((s3.address))
    access_key_id: ((s3.access_key))
    secret_access_key: ((s3.secret_key))
    skip_ssl_verification: true
    bucket: ((s3.bucket_name))

- name: ncp-product
  type: s3
  source:
    regexp: VMware-NSX-(.*).pivotal
    endpoint: ((s3.address))
    access_key_id: ((s3.access_key))
    secret_access_key: ((s3.secret_key))
    skip_ssl_verification: true
    bucket: ((s3.bucket_name))

- name: platform-automation-tasks
  type: s3
  source:
    regexp: platform-automation-tasks-(.*).zip
    endpoint: ((s3.address))
    access_key_id: ((s3.access_key))
    secret_access_key: ((s3.secret_key))
    skip_ssl_verification: true
    bucket: ((s3.bucket_name))

- name: platform-automation-image
  type: s3
  source:
    regexp: platform-automation-image-(.*).tgz
    endpoint: ((s3.address))
    access_key_id: ((s3.access_key))
    secret_access_key: ((s3.secret_key))
    skip_ssl_verification: true
    bucket: ((s3.bucket_name))

- name: config
  type: git
  source:
    private_key: ((git_deploy_key.private_key))
    uri: ((git_uri))
    branch: master

- name: installation
  type: s3
  source:
    regexp: installation-(.*).zip
    endpoint: ((s3.address))
    access_key_id: ((s3.access_key))
    secret_access_key: ((s3.secret_key))
    skip_ssl_verification: true
    bucket: ((s3.bucket_name))

- name: daily-trigger
  type: time
  source:
    interval: 24h

- name: one-time-trigger
  type: time
  source:
    interval: 999999h

jobs:
- name: install-opsman
  serial: true
  serial_groups: [ install ]
  plan:
    - aggregate:
        - get: one-time-trigger
          trigger: true
        - get: platform-automation-image
          params:
            unpack: true
        - get: platform-automation-tasks
          params:
            unpack: true
        - get: opsman-product
        - get: config
    - &credhub-interpolate
      task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub_client))
        CREDHUB_SECRET: ((credhub_secret))
        CREDHUB_SERVER: ((credhub_server))
        CREDHUB_CA_CERT: ((credhub_ca_cert.certificate))
        PREFIX: '/concourse/sandbox'
        INTERPOLATION_PATHS: '.'
      input_mapping:
        files: config
      output_mapping:
        interpolated-files: product-configs
    - task: create-vm
      image: platform-automation-image
      file: platform-automation-tasks/tasks/create-vm.yml
      input_mapping:
        image: opsman-product
        state: product-configs
        config: product-configs
      params:
        STATE_FILE: state/state.yml
        OPSMAN_CONFIG_FILE: config/opsman.yml
      ensure: &make-state-commit
        do:
          - task: make-commit
            image: platform-automation-image
            file: platform-automation-tasks/tasks/make-git-commit.yml
            input_mapping:
              repository: config
              file-source: generated-state
            output_mapping:
              repository-commit: configuration-commit
            params:
              FILE_SOURCE_PATH: state.yml
              FILE_DESTINATION_PATH: state/state.yml
              GIT_AUTHOR_EMAIL: "pcf-pipeline-bot@example.com"
              GIT_AUTHOR_NAME: "Platform Automation Bot"
              COMMIT_MESSAGE: 'Update state file'
          - put: config
            params:
              repository: configuration-commit
              merge: true
    - task: configure-authentication
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-authentication.yml
      attempts: 10
      input_mapping:
        env: product-configs
        config: product-configs
      params:
        ENV_FILE: env/env.yml
        AUTH_CONFIG_FILE: config/auth.yml
    - task: configure-director
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-director.yml
      input_mapping:
        config: product-configs
        env: product-configs
      params:
        ENV_FILE: env/env.yml
        DIRECTOR_CONFIG_FILE: config/director.yml
    - task: apply-director-changes
      image: platform-automation-image
      file: platform-automation-tasks/tasks/apply-director-changes.yml
      input_mapping:
        env: product-configs
      params:
        ENV_FILE: env/env.yml

- name: export-installation
  serial: true
  plan:
    - aggregate:
      - get: daily-trigger
        trigger: true
      - get: platform-automation-image
        params:
          unpack: true
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: config
    - *credhub-interpolate
    - task: export-installation
      image: platform-automation-image
      file: platform-automation-tasks/tasks/export-installation.yml
      input_mapping:
        env: product-configs
      params:
        ENV_FILE: env/env.yml
        INSTALLATION_FILE: installation-$timestamp.zip
    - put: installation
      params:
        file: installation/installation*.zip

- name: upgrade-opsman
  serial: true
  serial_groups: [ install ]
  plan:
    - aggregate:
      - get: one-time-trigger
        passed: [ install-opsman ]
      - get: platform-automation-image
        params:
          unpack: true
        trigger: true
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: opsman-product
      - get: installation
        passed: [ export-installation ]
      - get: config
    - *credhub-interpolate
    - task: upgrade-opsman
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upgrade-opsman.yml
      input_mapping:
        image: opsman-product
        state: product-configs
        config: product-configs
        env: product-configs
      params:
        ENV_FILE: env/env.yml
        OPSMAN_CONFIG_FILE: config/opsman.yml
        STATE_FILE: state/state.yml
      ensure: *make-state-commit
    - task: apply-director-changes
      image: platform-automation-image
      file: platform-automation-tasks/tasks/apply-director-changes.yml
      input_mapping:
        env: product-configs
      params:
        ENV_FILE: env/env.yml

- name: upload-and-stage-pas
  serial: true
  plan:
    - aggregate:
      - get: platform-automation-image
        params:
          unpack: true
        passed:
          - upgrade-opsman
        trigger: true
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: pas-product
      - get: config
    - *credhub-interpolate
    - task: upload-product
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upload-product.yml
      input_mapping:
        product: pas-product
        env: product-configs
      params:
        ENV_FILE: env/env.yml
    - task: stage-product
      image: platform-automation-image
      file: platform-automation-tasks/tasks/stage-product.yml
      input_mapping:
        product: pas-product
        env: product-configs
      params:
        ENV_FILE: env/env.yml

- name: upload-and-stage-ncp
  serial: true
  plan:
    - aggregate:
      - get: platform-automation-image
        params:
          unpack: true
        passed:
          - upgrade-opsman
        trigger: true
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: ncp-product
      - get: config
    - *credhub-interpolate
    - task: upload-and-stage-product
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upload-and-stage-product.yml
      input_mapping:
        product: ncp-product
        env: product-configs
      params:
        ENV_FILE: env/env.yml

- name: upload-stemcells
  serial: true
  plan:
    - aggregate:
      - get: platform-automation-image
        params:
          unpack: true
        passed:
          - upgrade-opsman
        trigger: true
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: pas-stemcell
        trigger: true
      - get: config
    - *credhub-interpolate
    - task: upload-pas-stemcell
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upload-stemcell.yml
      input_mapping:
        env: product-configs
        stemcell: pas-stemcell
      params:
        ENV_FILE: env/env.yml