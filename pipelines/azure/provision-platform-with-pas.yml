resource_types:
- name: azure-blobstore
  type: docker-image
  source:
    repository: pcfabr/azure-blobstore-resource

resources:
  - name: platform-automation-tasks
    type: azure-blobstore
    source:
      storage_account_name: ((storage_account_name))
      storage_account_key: ((storage_account_key))
      container: ((container))
      regexp: .*tasks-(.*).zip

  - name: platform-automation-image
    type: azure-blobstore
    source:
      storage_account_name: ((storage_account_name))
      storage_account_key: ((storage_account_key))
      container: ((container))
      regexp: .*image-(.*).tgz

  - name: installation
    type: azure-blobstore
    source:
      storage_account_name: ((storage_account_name))
      storage_account_key: ((storage_account_key))
      container: ((container))
      regexp: installation-(.*).zip

  - name: opsman-image
    type: azure-blobstore
    source:
      storage_account_name: ((storage_account_name))
      storage_account_key: ((storage_account_key))
      container: ((container))
      regexp: OpsManager(.*)onAzure.yml

  - name: pas-stemcell
    type: azure-blobstore
    source:
      storage_account_name: ((storage_account_name))
      storage_account_key: ((storage_account_key))
      container: ((container))
      regexp: pas-stemcell/bosh-stemcell-(.*)-azure-hyperv-ubuntu-xenial-go_agent\.tgz

  - name: pas-product
    type: azure-blobstore
    source:
      storage_account_name: ((storage_account_name))
      storage_account_key: ((storage_account_key))
      container: ((container))
      regexp: cf-(.*).pivotal

  - name: configuration
    type: git
    source:
      private_key: ((configuration.private_key))
      uri: ((configuration.uri))
      branch: master

  - name: one-time-trigger
    type: time
    source:
      interval: 999999h

  - name: daily-trigger
    type: time
    source:
      interval: 24h

jobs:
  - name: install-opsman
    serial: true
    serial_groups: [ install ]
    plan:
      - aggregate:
          - get: platform-automation-image
            params:
              unpack: true
          - get: one-time-trigger
            trigger: true
          - get: platform-automation-tasks
            params:
              unpack: true
          - get: opsman-image
          - get: configuration
      - task: credhub-interpolate
        image: platform-automation-image
        file: platform-automation-tasks/tasks/credhub-interpolate.yml
        params:
          CREDHUB_CLIENT: ((credhub-client))
          CREDHUB_SECRET: ((credhub-secret))
          CREDHUB_SERVER: ((credhub-server))
          CREDHUB_CA_CERT: ((credhub-ca-cert))
          PREFIX: '/pipeline/azure'
          INTERPOLATION_PATH: ((foundation))
        input_mapping:
          files: configuration
        output_mapping:
          interpolated-files: interpolated-config
      - task: create-vm
        image: platform-automation-image
        file: platform-automation-tasks/tasks/create-vm.yml
        input_mapping:
          image: opsman-image
          state: interpolated-config
          config: interpolated-config
        params:
          STATE_FILE: ((foundation))/state/state.yml
          OPSMAN_CONFIG_FILE: ((foundation))/config/opsman.yml
        ensure: &make-state-commit
          do:
            - task: make-commit
              image: platform-automation-image
              file: platform-automation-tasks/tasks/make-git-commit.yml
              input_mapping:
                repository: configuration
                file-source: generated-state
              output_mapping:
                repository-commit: configuration-commit
              params:
                FILE_SOURCE_PATH: state.yml
                FILE_DESTINATION_PATH: ((foundation))/state/state.yml
                GIT_AUTHOR_EMAIL: "pcf-pipeline-bot@example.com"
                GIT_AUTHOR_NAME: "Platform Automation Bot"
                COMMIT_MESSAGE: 'Update state file'
            - put: configuration
              params:
                repository: configuration-commit
                merge: true
      - task: configure-authentication
        image: platform-automation-image
        file: platform-automation-tasks/tasks/configure-authentication.yml
        attempts: 10
        input_mapping:
          env: interpolated-config
          config: interpolated-config
        params:
          ENV_FILE: ((foundation))/env/env.yml
          AUTH_CONFIG_FILE: ((foundation))/config/auth.yml
      - task: configure-director
        image: platform-automation-image
        file: platform-automation-tasks/tasks/configure-director.yml
        input_mapping:
          config: interpolated-config
          env: interpolated-config
        params:
          ENV_FILE: ((foundation))/env/env.yml
          DIRECTOR_CONFIG_FILE: ((foundation))/config/director.yml
      - task: apply-director-changes
        image: platform-automation-image
        file: platform-automation-tasks/tasks/apply-director-changes.yml
        input_mapping:
          env: interpolated-config
        params:
          ENV_FILE: ((foundation))/env/env.yml

  - name: staged-director-config
    serial: true
    plan:
      - aggregate:
          - get: platform-automation-tasks
            params: {unpack: true}
          - get: platform-automation-image
            params: {unpack: true}
          - get: configuration
      - task: credhub-interpolate
        image: platform-automation-image
        file: platform-automation-tasks/tasks/credhub-interpolate.yml
        params:
          CREDHUB_CLIENT: ((credhub-client))
          CREDHUB_SECRET: ((credhub-secret))
          CREDHUB_SERVER: ((credhub-server))
          CREDHUB_CA_CERT: ((credhub-ca-cert))
          PREFIX: '/pipeline/azure'
          INTERPOLATION_PATH: ((foundation))
        input_mapping:
          files: configuration
        output_mapping:
          interpolated-files: interpolated-config
      - task: staged-director-config
        image: platform-automation-image
        file: platform-automation-tasks/tasks/staged-director-config.yml
        input_mapping:
          env: interpolated-config
        params:
          ENV_FILE: ((foundation))/env/env.yml

  - name: export-installation
    serial: true
    plan:
      - aggregate:
          - get: daily-trigger
            trigger: true
          - get: platform-automation-image
            params:
              unpack: true
          - get: platform-automation-tasks
            params:
              unpack: true
          - get: configuration
      - task: credhub-interpolate
        image: platform-automation-image
        file: platform-automation-tasks/tasks/credhub-interpolate.yml
        params:
          CREDHUB_CLIENT: ((credhub-client))
          CREDHUB_SECRET: ((credhub-secret))
          CREDHUB_SERVER: ((credhub-server))
          CREDHUB_CA_CERT: ((credhub-ca-cert))
          PREFIX: '/pipeline/azure'
          INTERPOLATION_PATH: ((foundation))
        input_mapping:
          files: configuration
        output_mapping:
          interpolated-files: interpolated-config
      - task: export-installation
        image: platform-automation-image
        file: platform-automation-tasks/tasks/export-installation.yml
        input_mapping:
          env: interpolated-config
        params:
          ENV_FILE: ((foundation))/env/env.yml
          INSTALLATION_FILE: installation-$timestamp.zip
      - put: installation
        params:
          file: installation/installation*.zip

  - name: upgrade-opsman
    serial: true
    serial_groups: [ install ]
    plan:
      - aggregate:
          - get: one-time-trigger
            passed: [ install-opsman ]
          - get: platform-automation-image
            params:
              unpack: true
            trigger: true
          - get: platform-automation-tasks
            params:
              unpack: true
          - get: opsman-image
          - get: installation
            passed: [ export-installation ]
          - get: configuration
      - task: credhub-interpolate
        image: platform-automation-image
        file: platform-automation-tasks/tasks/credhub-interpolate.yml
        params:
          CREDHUB_CLIENT: ((credhub-client))
          CREDHUB_SECRET: ((credhub-secret))
          CREDHUB_SERVER: ((credhub-server))
          CREDHUB_CA_CERT: ((credhub-ca-cert))
          PREFIX: '/pipeline/azure'
          INTERPOLATION_PATH: ((foundation))
        input_mapping:
          files: configuration
        output_mapping:
          interpolated-files: interpolated-config
      - task: upgrade-opsman
        image: platform-automation-image
        file: platform-automation-tasks/tasks/upgrade-opsman.yml
        input_mapping:
          image: opsman-image
          state: interpolated-config
          config: interpolated-config
          env: interpolated-config
        params:
          ENV_FILE: ((foundation))/env/env.yml
          OPSMAN_CONFIG_FILE: ((foundation))/config/opsman.yml
          STATE_FILE: ((foundation))/state/state.yml
        ensure: *make-state-commit
      - task: apply-director-changes
        image: platform-automation-image
        file: platform-automation-tasks/tasks/apply-director-changes.yml
        input_mapping:
          env: interpolated-config
        params:
          ENV_FILE: ((foundation))/env/env.yml

  - name: upload-and-stage-pas
    serial: true
    plan:
      - aggregate:
          - get: platform-automation-image
            params:
              unpack: true
            passed:
              - upgrade-opsman
            trigger: true
          - get: platform-automation-tasks
            params:
              unpack: true
          - get: pas-product
          - get: configuration
      - task: credhub-interpolate
        image: platform-automation-image
        file: platform-automation-tasks/tasks/credhub-interpolate.yml
        params:
          CREDHUB_CLIENT: ((credhub-client))
          CREDHUB_SECRET: ((credhub-secret))
          CREDHUB_SERVER: ((credhub-server))
          CREDHUB_CA_CERT: ((credhub-ca-cert))
          PREFIX: '/pipeline/azure'
          INTERPOLATION_PATH: ((foundation))
        input_mapping:
          files: configuration
        output_mapping:
          interpolated-files: interpolated-config
      - task: upload-product
        image: platform-automation-image
        file: platform-automation-tasks/tasks/upload-product.yml
        input_mapping:
          product: pas-product
          env: interpolated-config
        params:
          ENV_FILE: ((foundation))/env/env.yml
      - task: stage-product
        image: platform-automation-image
        file: platform-automation-tasks/tasks/stage-product.yml
        input_mapping:
          product: pas-product
          env: interpolated-config
        params:
          ENV_FILE: ((foundation))/env/env.yml

  - name: configure-pas
    serial: true
    plan:
      - aggregate:
          - get: platform-automation-image
            params:
              unpack: true
            passed:
              - upload-and-stage-pas
            trigger: true
          - get: platform-automation-tasks
            params:
              unpack: true
          - get: configuration
      - task: credhub-interpolate
        image: platform-automation-image
        file: platform-automation-tasks/tasks/credhub-interpolate.yml
        params:
          CREDHUB_CLIENT: ((credhub-client))
          CREDHUB_SECRET: ((credhub-secret))
          CREDHUB_SERVER: ((credhub-server))
          CREDHUB_CA_CERT: ((credhub-ca-cert))
          PREFIX: '/pipeline/azure'
          INTERPOLATION_PATH: ((foundation))
        input_mapping:
          files: configuration
        output_mapping:
          interpolated-files: interpolated-config
      - task: configure-pas
        image: platform-automation-image
        file: platform-automation-tasks/tasks/configure-product.yml
        input_mapping:
          config: interpolated-config
          env: interpolated-config
        params:
          CONFIG_FILE: ((foundation))/config/cf.yml
          ENV_FILE: ((foundation))/env/env.yml

  - name: upload-stemcells
    serial: true
    plan:
      - aggregate:
          - get: platform-automation-image
            params:
              unpack: true
            passed:
              - upgrade-opsman
            trigger: true
          - get: platform-automation-tasks
            params:
              unpack: true
          - get: pas-stemcell
            trigger: true
          - get: configuration
      - task: credhub-interpolate
        image: platform-automation-image
        file: platform-automation-tasks/tasks/credhub-interpolate.yml
        params:
          CREDHUB_CLIENT: ((credhub-client))
          CREDHUB_SECRET: ((credhub-secret))
          CREDHUB_SERVER: ((credhub-server))
          CREDHUB_CA_CERT: ((credhub-ca-cert))
          PREFIX: '/pipeline/azure'
          INTERPOLATION_PATH: ((foundation))
        input_mapping:
          files: configuration
        output_mapping:
          interpolated-files: interpolated-config
      - task: upload-pas-stemcell
        image: platform-automation-image
        file: platform-automation-tasks/tasks/upload-stemcell.yml
        input_mapping:
          env: interpolated-config
          stemcell: pas-stemcell
        params:
          ENV_FILE: ((foundation))/env/env.yml

  - name: apply-product-changes
    serial: true
    plan:
      - aggregate:
          - get: platform-automation-image
            params:
              unpack: true
            passed:
              - configure-pas
            trigger: true
          - get: platform-automation-tasks
            params:
              unpack: true
          - get: configuration
      - task: credhub-interpolate
        image: platform-automation-image
        file: platform-automation-tasks/tasks/credhub-interpolate.yml
        params:
          CREDHUB_CLIENT: ((credhub-client))
          CREDHUB_SECRET: ((credhub-secret))
          CREDHUB_SERVER: ((credhub-server))
          CREDHUB_CA_CERT: ((credhub-ca-cert))
          PREFIX: '/pipeline/azure'
          INTERPOLATION_PATH: ((foundation))
        input_mapping:
          files: configuration
        output_mapping:
          interpolated-files: interpolated-config
      - task: apply-product-changes
        image: platform-automation-image
        file: platform-automation-tasks/tasks/apply-changes.yml
        input_mapping:
          env: interpolated-config
        params:
          ENV_FILE: ((foundation))/env/env.yml

  - name: staged-pas-config
    plan:
      - aggregate:
          - get: platform-automation-image
            params:
              unpack: true
          - get: platform-automation-tasks
            params:
              unpack: true
          - get: configuration
      - task: credhub-interpolate
        image: platform-automation-image
        file: platform-automation-tasks/tasks/credhub-interpolate.yml
        params:
          CREDHUB_CLIENT: ((credhub-client))
          CREDHUB_SECRET: ((credhub-secret))
          CREDHUB_SERVER: ((credhub-server))
          CREDHUB_CA_CERT: ((credhub-ca-cert))
          PREFIX: '/pipeline/azure'
          INTERPOLATION_PATH: ((foundation))
        input_mapping:
          files: configuration
        output_mapping:
          interpolated-files: interpolated-config
      - task: staged-config
        image: platform-automation-image
        file: platform-automation-tasks/tasks/staged-config.yml
        input_mapping:
          env: interpolated-config
        params:
          PRODUCT_NAME: cf
          ENV_FILE: ((foundation))/env/env.yml
      - task: make-commit
        image: platform-automation-image
        file: platform-automation-tasks/tasks/make-git-commit.yml
        input_mapping:
          repository: configuration
          file-source: generated-config
        output_mapping:
          repository-commit: configuration-commit
        params:
          FILE_SOURCE_PATH: cf.yml
          FILE_DESTINATION_PATH: ((foundation))/config/cf.yml
          GIT_AUTHOR_EMAIL: "pcf-pipeline-bot@example.com"
          GIT_AUTHOR_NAME: "Platform Automation Bot"
          COMMIT_MESSAGE: 'Store cf product config'
      - put: configuration
        params:
          repository: configuration-commit
          merge: true
